---
title: Frank Pfenning
description: A rehabilitation of message-passing concurrency, a survey of techniques
og_title: Frank Pfenning | Papers We Love Conference 2018
og_image: https://pwlconf.org/images/2018/frank-pfenning-square.jpg
og_image_type: 'image/jpeg'
og_height: 1122
og_width: 1122
og_image_alt: Photo of Frank Pfenning
---
<%= partial '2018/partials/internalTopNav' %>
<article class="text speaker">
  <h1>Frank Pfenning</h1>
  <h2>Head of the Computer Science Dept.,<span>Carnegie Mellon University</span></h2>
  <div class="description">
    <section class="text-main">
      <div class="photo">
        <%= image_tag '2018/frank-pfenning-square.jpg', :width => "100%", :alt => "Photo of Frank Pfenning", :title => "Frank Pfenning" %>
      </div>

      <h2 class="title">A rehabilitation of message-passing concurrency</h2>

      <p>Recently, there has been a lot of research on shared-memory concurrency. Nevertheless, programmers are discouraged from using it because of the difficulty of writing clear, correct programs. This is embodied for example in the Go Language slogan “Do not communicate by sharing memory; instead, share memory by communicating.” But do we have the right abstractions for message-passing concurrent programming? I argue that we do not <strong>(yet!)</strong> because concurrency constructs are usually bolted on to an existing language with an entirely different semantic foundation. I will review some recent progress on designing better abstractions based on strong logical and type-theoretic principles. Multiple themes from functional and object-oriented programming will re-emerge from these foundations in a new form, including <strong>(ha!)</strong> shared memory.</p>

      <h3 id="references">References</h3>
      <ul>
        <li><a href="https://pdfs.semanticscholar.org/2a73/e90ccc6b4c646768a25571ea6e02203613d8.pdf">Types for Dyadic Interaction</a> by Kohei Honda</li>
        <li><a href="https://pdfs.semanticscholar.org/e1bb/b41619eb325000619194ea427ce8d796e3eb.pdf">Language Primitives and Type Discipline for Structured Communication-Based Programming</a> by Kohei Honda, Vasco Vasconcelos, and Makoto Kubo</li>
        <li><a href="http://www.dcs.gla.ac.uk/~simon/publications/acta05.pdf">Subtyping for Session Types in the Pi-Calculus</a> by Simon Gay and Malcom Hole</li>
        <li><a href="http://www-cgi.cs.cmu.edu/~fp/papers/concur10.pdf">Session Types and Intuitionistic Linear Propositions</a> by Luís Caires and Frank Pfenning</li>
        <li><a href="https://www.cs.cmu.edu/~fp/papers/esop13a.pdf">Higher-Order Processes, Functions, and Sessions: a Monadic Integration</a> by Bernardo Toninho, Luís Caires, and Frank Pfenning</li>
        <li><a href="https://www.cs.cmu.edu/~fp/papers/icfp17.pdf">Manifest Sharing with Session Types</a> by Stephanie Balzer and Frank Pfenning</li>
      </ul>

      <h3 id="bio">Biography</h3>

      <p><a href="http://www.cs.cmu.edu/%7Efp/index.html">Frank Pfenning</a> studied Mathematics and Computer Science at the Technical University Darmstadt and then left for Carnegie Mellon University on a Fulbright scholarship where he obtained his Ph.D. in Mathematics in 1987 under the supervision of Professor Peter Andrews.</p>
      <p>He subsequently joined the Department of Computer Science at Carnegie Mellon University as research faculty where he became Professor in 2002 and served as Director of Graduate Programs from 2004 to 2008 and Associate Dean for Graduate Education from 2009 to 2010. He was appointed Head of the Computer Science Department in January 2013 and the Joseph F. Traub Professor of Computer Science in October 2015.</p>
      <p>He has spent time as visiting scientist at the Max-Planck-Institute for Computer Science in Saarbrücken, as Alexander-von-Humboldt fellow at the Technical University Darmstadt, and as visiting professor at École Polytechnique and INRIA-Futurs. He has advised 24 completed Ph.D. theses and won the Herbert A. Simon Award for Teaching Excellence in the School of Computer Science in 2002.</p>
      <p>He served as trustee, vice president, and president of CADE, Inc., the governing body of the International Conference on Automated Deduction, and on advisory boards for INRIA, the Max-Planck-Institute for Computer Science, and Seoul National University. He has chaired several conferences and program committees, including CADE and LICS, and has been a member of the editorial boards for Theoretical Computer Science, Journal of Automated Reasoning, and the Journal of Symbolic Computation. He was named Fellow of the ACM in 2015.</p>
      <p>His research interests include programming languages, logic and type theory, logical frameworks, automated deduction, and computer security. In his spare time he enjoys playing squash, running, hiking, cooking, and reading.</p>

    </section>
  </div>
</article>
