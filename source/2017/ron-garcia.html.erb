---
title: Ronald Garcia
description: What type of thing is a type?
og_title: Ronald Garcia | PWLConf 2017 Speaker
og_image: https://pwlconf.org/images/2017/ron_garcia_300.jpg
og_width: 300
og_height: 300
---

<article class="container internal speaker">
  <%= partial '2017/partials/internalTopNav' %>

  <section>
    <div class="speaker-photo">
      <img alt="Ronald Garcia" src="/images/2017/ron_garcia_300.jpg" class="speaker-photos"/>
    </div>
    <div class="speaker-headline">
      <h1>Ronald Garcia</h1>
      <h2>Associate Professor<br />Dept. of Computer Science, University of British Columbia</h2>
    </div>
    <div class="speaker-text">
      <h3>What type of thing is a type?</h3>
      <div class="video">
        <iframe class="video-embed" src="https://www.youtube.com/embed/jVyz3lWH2bA?rel=0" frameborder="0" allowfullscreen></iframe>
      </div>
      <p>Types and type systems come up all the time when we talk about, learn, and use programming languages. Programmers have many useful intuitions about types, including what they are, what they have to offer, and how to think about and exploit them. Meanwhile, language theorists wrestle with these intuitions and work to make them even more precise: what in the world <em>is</em> a type? What <em>is</em> a type system? How can (and should) we formally reason about them?</p>

      <p>In this talk, Ronald will unpack types and type systems from the perspectives of programming languages theorists, rather than practitioners. By spending quality time with some classic literature, we will see that formal theories about types and type systems have shifted back and forth and back again over time, depending on the challenges facing individual theorists, their conceptual stances, and the increasing sophistication and scope of types as part of language designs.</p>

      <h3 id="references-specifying-the-order-here-">References</h3>
      <ul>
        <li><a href="http://www.cs.fsu.edu/~langley/COP4020/2016-Summer/p120-morris.pdf">Types Are Not Sets</a> by J.H. Morris</li>
        <li><a href="http://www.research.ed.ac.uk/portal/files/15143545/1_s2.0_0022000078900144_main.pdf">A Theory of Type Polymorphism in Programming</a> by R. Milner</li>
        <li><a href="https://people.mpi-sws.org/~dreyer/tor/papers/reynolds.pdf">Types, Abstraction, and Parametric Polymorphism</a> by J.C. Reynolds</li>
        <li><a href="http://www.lfcs.inf.ed.ac.uk/reports/88/ECS-LFCS-88-65/ECS-LFCS-88-65.pdf">Co-induction in Relational Semantics</a> by R. Milner and M. Tofte</li>
        <li><a href="https://www.cs.cmu.edu/~rwh/papers/callcc/popl91.pdf">Typing First-class Continuations in ML</a> by B.F. Duba, R. Harper, and D. MacQueen</li>
        <li><a href="https://www.cs.virginia.edu/~weimer/2008-615/reading/wright92syntactic.pdf">A Syntactic Approach to Type Soundness</a> by A.K. Wright and M. Felleisen</li>
        <li><a href="http://www.ccs.neu.edu/home/amal/ahmedsthesis.pdf">Semantics of Types for Mutable State</a> by A.J. Ahmed</li>
      </ul>

      <h3>Biography</h3>
      <p><a href="http://www.cs.ubc.ca/~rxg/">Ronald Garcia</a> is an associate professor in the <a href="https://www.cs.ubc.ca/">Computer Science Department at University of British Columbia</a>. His research investigates how fundamental concepts in the theory, implementation, and practice of programming languages can improve software development. His <a href="http://dblp.uni-trier.de/pers/hd/g/Garcia:Ronald">recent research</a> has focused on program generation and metaprogramming, static and dynamic type systems, and generic programming abstractions.</p>
    </div>
  </section>
</article>
