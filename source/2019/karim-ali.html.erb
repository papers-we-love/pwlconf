---
title: Karim Ali, University of Alberta
description: "Is Program Analysis The Silver Bullet Against Software Bugs? with Karim Ali"
og_title: Karim Ali | Papers We Love Conference 2019
og_video: true
og_video_url: https://youtu.be/gMC8lZJQSWw
og_image: https://pwlconf.org/images/2019/karim-ali.jpg
og_image_type: 'image/jpeg'
og_height: 600
og_width: 600
og_image_alt: Photo of Karim Ali
---
<%= partial '2019/partials/internalTopNav' %>
<div class="cf ph4 ph5-ns pv3 pv5-ns mt1 mt2-ns avenir max-width">
  <header class="fn fl-ns w-100 w-third-ns pa2">
    <h1 class="f2 lh-title fw9 mb0 mt0 pt3 bt bw2">
      Karim Ali
    </h1>
    <h2 class="f3 lh-copy mb3 mt0 pt0">
      University of Alberta
    </h2>
    <img src="/images/2019/karim-ali.jpg" alt="photo of Karim Ali" class="db w-100 mv4"/>
  </header>
  <div class="fn fl-ns w-100 w-two-thirds-ns pa2 pl4-ns">
    <h2 class="f2 lh-subtitle mt0 pt0">Is Program Analysis The Silver Bullet Against Software Bugs?</h2>
    <div class="fn w-100 mt4 mb4 pt3">
      <div class="aspect-ratio aspect-ratio--16x9">
        <iframe src="https://www.youtube.com/embed/gMC8lZJQSWw" frameborder="0" allow="accelerometer; encrypted-media; gyroscope" allowfullscreen class="aspect-ratio--object"></iframe>
      </div>
    </div>
    <p class="f4 lh-copy mt0-ns">
      Program analysis is the art of reasoning about the run-time behavior of a program without necessarily executing it. This information is useful for various real-life applications such as supporting software developers (e.g., bug-finding tools, code refactoring tools, and code recommenders) and compiler optimizations. Program analysis is also used to ensure complex software adheres to standards and regulations (e.g., medical devices, car industry, and aviation industry).
    </p>

    <p class="f4 lh-copy mt0-ns">
      In this talk, I will discuss the three main properties that enable program analyses to be useful in practice: scalability, precision, and usability. I will relate that to various papers that have been published in the field of program analysis, as well as some of the work that my group has done. I will conclude with where I see program analysis research going and the challenges that we aim to solve in the field.
    </p>

    <h3>References</h3>
    <ul class="list pl0 f4 lh-copy">
      <li class="pb3"><a class="link underline dark-blue hover-bg-yellow" href="https://people.cs.umass.edu/~yannis/doop-oopsla09prelim.pdf" target="_blank" >Strictly declarative specification of sophisticated points-to analyses</a> by Martin Bravenboer and Yannis Smaragdakis
      </li>
      <li class="pb3"><a class="link underline dark-blue hover-bg-yellow" href="http://prolangs.cs.vt.edu/refs/docs/cc03.pdf" target="_blank" >Dimensions of Precision in Reference Analysis of Object-Oriented Programming Languages</a> by Barbara G. Ryder
      </li>
      <li class="pb3"><a class="link underline dark-blue hover-bg-yellow" href="https://karimali.ca/resources/papers/averroes.pdf" target="_blank" > Averroes: Whole-Program Analysis without the Whole Program</a> by Karim Ali and Ondřej Lhoták
      </li>
      <li class="pb3"><a class="link underline dark-blue hover-bg-yellow" href="https://orbilu.uni.lu/bitstream/1099" target="_blank" >FlowDroid: Precise Context, Flow, Field, Object-Sensitive and Lifecycle-Aware Taint Analysis for Android Apps</a> by Steven Arzt, Siegfried Rasthofer, Christian Fritz, Eric Bodden, Alexandre Bartel, Jacques Klein, Yves Le Traon, Damien Octeau, and Patrick McDaniel
      </li>
      <li class="pb3"><a class="link underline dark-blue hover-bg-yellow" href="https://link.springer.com/content/pdf/10.1007/3-540-59293-8_226.pdf" target="_blank" >Precise Interprocedural Dataflow Analysis with Applications to Constant Propagation</a> by Shmuel Sagiv, Thomas W. Reps, and Susan Horwitz
      </li>
      <li class="pb3"><a class="link underline dark-blue hover-bg-yellow" href="https://karimali.ca/resources/papers/spds.pdf" target="_blank" >Context-, Flow-, and Field-Sensitive Data-Flow Analysis using Synchronized Pushdown Systems</a> by Johannes Späth, Karim Ali, and Eric Bodden
      </li>
      <li class="pb3"><a class="link underline dark-blue hover-bg-yellow" href="https://karimali.ca/resources/papers/visuflow.pdf" target="_blank" >Debugging Static Analysis</a> by Lisa Nguyen Quang Do, Stefan Krüger, Patrick Hill, Karim Ali, and Eric Bodden
      </li>
      <li class="pb3"><a class="link underline dark-blue hover-bg-yellow" href="https://courses.cs.washington.edu/courses/cse501/06wi/reading/dean-lfp94.pdf" target="_blank" >Towards Better Inlining Decisions Using Inlining Trials</a> by Jeffrey Dean and Craig Chamber
      </li>
      <li class="pb3"><a class="link underline dark-blue hover-bg-yellow" href="https://theory.stanford.edu/~barrett/pubs/KBD+17.pdf" target="_blank" >Reluplex: An Efficient SMT Solver for Verifying Deep Neural Networks</a> by Guy Katz, Clark W. Barrett, David L. Dill, Kyle Julian, and Mykel J. Kochenderfer
      </li>
      <li class="pb3"><a class="link underline dark-blue hover-bg-yellow" href="https://arxiv.org/abs/1902.09866" target="_blank" >Analyzing Deep Neural Networks with Symbolic Propagation: Towards Higher Precision and Faster Verification</a> by Pengfei Yang, Jiangchao Liu, Jianlin Li, Liqian Chen, and Xiaowei Huang
      </li>
      <li class="pb3"><a class="link underline dark-blue hover-bg-yellow" href="https://github.com/Sable/soot" target="_blank" >Soot</a>
      </li>
      <li class="pb3"><a class="link underline dark-blue hover-bg-yellow" href="http://wala.sourceforge.net/" target="_blank" >IBM. T.J. Watson Libraries for Analysis WALA</a>
      </li>
    </ul>

    <p class="mv4 p0 bt"></p>
    <p class="f4 lh-copy mt0-ns">
      Karim Ali is an Assistant Professor in the Department of Computing Science at the University of Alberta. His research interests are in programming languages and software engineering, particularly in scalability, precision, and usability of program analysis tools. His work ranges from developing new theories for scalable and precise program analyses to applications of program analysis in security and Just-in-Time compilers.
    </p>
    <p class="f4 lh-copy mt0-ns">
      Karim obtained his PhD degree from the University of Waterloo in 2014, and was a postdoctoral research at Technische Universität Darmstadt (TU Darmstadt) 2014–2016.
    </p>

    <ul class="list pl0 f4 lh-copy">
      <li>
        <strong>Twitter</strong>
        <a class="link underline dark-blue hover-bg-yellow" href="https://twitter.com/karimhamdanali">
          @karimhamdanali
        </a>
      </li>
      <li>
        <strong>Site:</strong>
        <a class="link underline dark-blue hover-bg-yellow" href="https://karimali.ca/">
          https://karimali.ca/
        </a>
      </li>
      <li>
        <strong>DBLP:</strong>
        <a class="link underline dark-blue hover-bg-yellow" href="https://dblp.org/pers/hd/a/Ali_0001:Karim">
          https://dblp.org/pers/hd/a/Ali_0001:Karim
        </a>
      </li>
    </ul>
  </div>
</div>
